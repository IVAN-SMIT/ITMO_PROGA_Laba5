package commands;

import auxiliary.Command;
import auxiliary.Messager;

/**
 * Отображает все доступные команды
 */

public class HelpCommand implements Command {
    public void run() throws IllegalArgumentException {

         new Messager().println(
                "help : вывести справку по доступным командам\n\n"+

                "info : вывести в стандартный поток вывода информацию о коллекции (тип, дата инициализации, количество элементов и т.д.)\n\n"+

                "show : вывести в стандартный поток вывода все элементы коллекции в строковом представлении\n\n"+

                "add {element} : добавить новый элемент в коллекцию\n\n"+

                "update id {element} : обновить значение элемента коллекции, id которого равен заданному\n\n"+

                "remove_by_id id : удалить элемент из коллекции по его id\n\n"+

                "clear : очистить коллекцию\n\n"+

                "save : сохранить коллекцию в файл\n\n"+

                "execute_script file_name : считать и исполнить скрипт из указанного файла. В скрипте содержатся команды в таком же виде, в котором их вводит пользователь в интерактивном режиме.\n\n"+

                "exit : завершить программу (без сохранения в файл)\n\n"+

                "insert_at index {element} : добавить новый элемент в заданную позицию\n\n"+

                "remove_last : удалить последний элемент из коллекции\n\n"+
                
                "shuffle : перемешать элементы коллекции в случайном порядке\n\n"+
                
                "history : вывести последние 10 команд (без их аргументов)\n\n"+

                "remove_any_by_climate climate : удалить из коллекции один элемент, значение поля climate которого эквивалентно заданному\n\n"+
           
                "filter_greater_than_car_code carCode : вывести элементы, значение поля carCode которых больше заданного", true);
    }
}
